// IMPORTANT!!!
// This example is uplink data converter only for Loriot integration in ThingsBoard.
// Data converters for other integrations use different input and result.

// these options can be edited
// available hardware types can be found here:
// https://github.com/jooby-dev/jooby-docs/blob/main/docs/analog/basics.md#hardware-types
var config = {
    // required field
    hardwareType: 0,
};


//#region [autogenerated jooby-codec bundle]
/*{{bundle}}*/
//#endregion


function decodeToString ( payload ) {
    return String.fromCharCode.apply(String, payload);
}

function decodeToJson( payload ) {
    // covert payload to string.
    var str = decodeToString(payload);
    // parse string to JSON
    var data = JSON.parse(str);
    return data;
}

var payloadJson = decodeToJson(payload);
// Use EUI as unique device name.
var deviceName = payloadJson.EUI;
// Specify the device type. Use one data converter per device type or application.
var deviceType = "jooby-device";

/*
   Incoming arguments:
     * payload - array of bytes
     * metadata - key/value object
 */

var telemetry = {
    fcnt: payloadJson.fcnt,
    port: payloadJson.port,
    freq: payloadJson.freq,
    dr: payloadJson.dr,
    rssi: payloadJson.rssi,
    snr: payloadJson.snr,
    rawData: payloadJson.data,
};

// the “data” field is not always present
if ( payloadJson.data ) {
    var message = fromBytes(getBytesFromHex(payloadJson.data), config);

    // there may be a message.error (e.g. mismatched LRC)
    // in that case message.message will contain everything parsed successfully
    // it should be used with caution
    // save all commands as string value
    telemetry.message = JSON.stringify(message.message || message);
}


var result = {
    deviceName: deviceName,
    deviceType: deviceType,
    attributes: {},
    telemetry: {
        ts: payloadJson.ts,
        values: telemetry,
    }
};

return result;
