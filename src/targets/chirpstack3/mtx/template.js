// encoded message should be less than this size
// to be able to send to a device
var MAX_DATA_SEGMENT_SIZE = 50;


/*
  Decode decodes an array of bytes into an object:
   * fPort contains the LoRaWAN fPort number
   * bytes is an array of bytes, e.g. [225, 230, 255, 0]
   * variables contains the device variables e.g. {calibration: "3.5"} (both the key/value are of type string)

  The function must return an object, e.g. {temperature: 22.5}
*/
function Decode ( fPort, bytes, variables ) {
    var segment = getDataSegment(bytes)

    // just a single data segment
    if ( segment ) {
        var message = fromBytes(segment);

        // there may be a message.error (e.g. mismatched LRC)
        // in that case message.message will contain everything parsed successfully
        // it should be used with caution

        return {data: message.message || message};
    }

    return {data: null};
}


/*
  Encode encodes the given object into an array of bytes:
   * fPort contains the LoRaWAN fPort number
   * obj is an object, e.g. {temperature: 22.5}
   * variables contains the device variables e.g. {calibration: "3.5"} (both the key/value are of type string)

  The function must return an array of bytes, e.g. [225, 230, 255, 0]
*/
function Encode ( fPort, obj, variables ) {
    var bytes = toBytes(obj.commands);

    // send nothing if not fit in a single data segment
    if ( bytes.length > MAX_DATA_SEGMENT_SIZE ) {
        return [];
    }

    return setDataSegment(bytes);
}


//#region [autogenerated jooby-codec bundle from index.js]
/*{{bundle}}*/
//#endregion
