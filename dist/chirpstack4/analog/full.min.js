// these options can be edited
// available hardware types can be found here:
// https://github.com/jooby-dev/jooby-docs/blob/main/docs/analog/basics.md#hardware-types
var config = {
    hardwareType: 0
};


/*
  Get message form bytes.

  Input is an object with the following fields:
    * bytes - byte array containing the uplink payload, e.g. [255, 230, 255, 0]
    * fPort - uplink fPort
    * variables - object containing the configured device variables

  Output must be an object with the following fields:
    * data - object representing the decoded payload
*/
function decodeUplink ( input ) {
    return {data: fromBytes(input.bytes, config)};
};


/*
  Get payload bytes from commands.

  Input is an object with the following fields:
    * data - object representing the payload that must be encoded
    * variables - object containing the configured device variables

  Output must be an object with the following fields:
    * bytes - byte array containing the downlink payload
*/
function encodeDownlink ( input ) {
    return {
        bytes: toBytes(input.data.commands, config)
    };
};


//#region [autogenerated jooby-codec bundle]
var fromBytes,toBytes;!function(){"use strict";const t={separator:" ",prefix:""},{log:e,pow:n,LN2:s}=Math,r=[1,0],i=[3,2,1,0],o=[0,1],a=[0,1,2,3],h=(t,e)=>t[e],f=(t,e,n)=>{const s=n?o:r;return t[e+s[0]]|t[e+s[1]]<<8},u=(t,e,n)=>{const s=n?a:i;return 16777216*t[e+s[3]]+65536*t[e+s[2]]+256*t[e+s[1]]+t[e+s[0]]},c=(t,e,n)=>{t[e]=255&n},l=(t,e,n,s)=>{const i=s?o:r;t[e+i[0]]=255&n,t[e+i[1]]=n>>>8&255},g=(t,e,n,s)=>{const r=s?a:i;t[e+r[0]]=255&n,t[e+r[1]]=n>>>8&255,t[e+r[2]]=n>>>16&255,t[e+r[3]]=n>>>24&255};function d(t,e=!0){if("number"==typeof t){const e=new Array(t).fill(0);this.data=e}else this.data=t;this.offset=0,this.isLittleEndian=e}d.prototype={toUint8Array(){return this.data},seek(t){if(t<0||t>=this.data.length)throw new Error("Invalid position.");this.offset=t},setInt8(t){c(this.data,this.offset,t<0?256|t:t),this.offset+=1},getInt8(){const t=h(this.data,this.offset);return this.offset+=1,128&t?-256^t:t},setUint8(t){c(this.data,this.offset,t),this.offset+=1},getUint8(){const t=h(this.data,this.offset);return this.offset+=1,t},setInt16(t,e=this.isLittleEndian){l(this.data,this.offset,t<0?65536|t:t,e),this.offset+=2},getInt16(t=this.isLittleEndian){const e=f(this.data,this.offset,t);return this.offset+=2,32768&e?-65536^e:e},setUint16(t,e=this.isLittleEndian){l(this.data,this.offset,t,e),this.offset+=2},getUint16(t=this.isLittleEndian){const e=f(this.data,this.offset,t);return this.offset+=2,e},setInt32(t,e=this.isLittleEndian){g(this.data,this.offset,t<0?4294967296|t:t,e),this.offset+=4},getInt32(t=this.isLittleEndian){const e=u(this.data,this.offset,t);return this.offset+=4,2147483648&e?-4294967296^e:e},setUint32(t,e=this.isLittleEndian){g(this.data,this.offset,t,e),this.offset+=4},getUint32(t=this.isLittleEndian){const e=u(this.data,this.offset,t);return this.offset+=4,e},setFloat32(t,r=this.isLittleEndian){((t,r,i,o,a,h)=>{var f,u,c,l=8*h-a-1,g=(1<<l)-1,d=g>>1,w=23===a?n(2,-24)-n(2,-77):0,p=o?0:h-1,m=o?1:-1,y=i<0||0===i&&1/i<0?1:0;for(i<0&&(i=-i),i!=i||i===1/0?(u=i!=i?1:0,f=g):(f=e(i)/s|0,i*(c=n(2,-f))<1&&(f--,c*=2),(i+=f+d>=1?w/c:w*n(2,1-d))*c>=2&&(f++,c/=2),f+d>=g?(u=0,f=g):f+d>=1?(u=(i*c-1)*n(2,a),f+=d):(u=i*n(2,d-1)*n(2,a),f=0));a>=8;t[r+p]=255&u,p+=m,u/=256,a-=8);for(f=f<<a|u,l+=a;l>0;t[r+p]=255&f,p+=m,f/=256,l-=8);t[r+p-m]|=128*y})(this.data,this.offset,t,r,23,4),this.offset+=4},getFloat32(t=this.isLittleEndian){const e=((t,e,s,r,i)=>{var o,a,h=8*i-r-1,f=(1<<h)-1,u=f>>1,c=-7,l=s?i-1:0,g=s?-1:1,d=t[e+l];for(l+=g,o=d&(1<<-c)-1,d>>=-c,c+=h;c>0;o=256*o+t[e+l],l+=g,c-=8);for(a=o&(1<<-c)-1,o>>=-c,c+=r;c>0;a=256*a+t[e+l],l+=g,c-=8);if(0===o)o=1-u;else{if(o===f)return a?NaN:d?-1/0:1/0;a+=n(2,r),o-=u}return(d?-1:1)*a*n(2,o-r)})(this.data,this.offset,t,23,4);return this.offset+=4,e},setString(t){this.setUint8(t.length);for(let e=0;e<t.length;++e)this.setUint8(t.charCodeAt(e))},getString(){const t=this.getUint8(),e=this.offset+t,n=[];for(;this.offset<e;)n.push(String.fromCharCode(this.getUint8()));return n.join("")},getBytesToOffset(t=this.offset){return this.data.slice(0,t)},getBytesLeft(){return this.getBytes(this.bytesLeft)},getBytes(t,e=this.offset){return this.offset=e+t,this.data.slice(e,this.offset)},setBytes(t,e=this.offset){const n=this.data;n.splice(e,t.length,...t),this.data=n,this.offset=e+t.length}},Object.defineProperties(d.prototype,{size:{get(){return this.data.length}},isEmpty:{get(){return this.data.length-this.offset==0}},bytesLeft:{get(){return this.data.length-this.offset}},position:{get(){return this.offset}}});const w=31,p=t=>{if(0===t.length)throw new Error("Invalid buffer size");const e={shortCode:224&t[0],extraCode:t[0]&w};if(0!==e.shortCode)return{headerSize:1,commandId:t[0]&~e.extraCode,commandSize:e.extraCode};if(e.extraCode===w){if(t.length<3)throw new Error("Invalid buffer size");return{headerSize:3,commandId:t[1]<<8|w,commandSize:t[2]}}if(t.length<2)throw new Error("Invalid buffer size");return{headerSize:2,commandId:e.extraCode,commandSize:t[1]}},m=(t,e=[])=>{const n=((t,e)=>{if(!(t&w)){if(e>w)throw new Error(`Wrong command id/size. Id: ${t}, size: ${e}.`);return[t|e]}return t>w?[w,t>>8,e]:[t,e]})(t,e.length);return[...n,...e]},y=9466848e5,U=t=>new Date(y+1e3*t),E=t=>(t.getTime()-y)/1e3,b=(t={},e={})=>{let n=0;for(const s in e)s in t&&e[s]&&(n|=t[s]);return n},C=(t={},e=0)=>{const n={};for(const s in t)n[s]=!!(e&t[s]);return n};const v=4095,T=[2,3,1,12],L=[8,5,9,4],x=[11],M=[6,10],B=[7],V={isBatteryLow:Math.pow(2,0),isMagneticInfluence:Math.pow(2,1),isButtonReleased:Math.pow(2,2),isConnectionLost:Math.pow(2,3)},D={isBatteryLow:Math.pow(2,0),isConnectionLost:Math.pow(2,3),isFirstChannelInactive:Math.pow(2,4),isSecondChannelInactive:Math.pow(2,5)},S={isConnectionLost:Math.pow(2,3)},z={isBatteryLow:Math.pow(2,0),isConnectionLost:Math.pow(2,3),isFirstChannelInactive:Math.pow(2,4),isSecondChannelInactive:Math.pow(2,5),isThirdChannelInactive:Math.pow(2,6),isForthChannelInactive:Math.pow(2,7)},I={isMeterCaseOpen:Math.pow(2,0),isMagneticInfluence:Math.pow(2,1),isParametersSetRemotely:Math.pow(2,2),isParametersSetLocally:Math.pow(2,3),isMeterProgramRestarted:Math.pow(2,4),isLockedOut:Math.pow(2,5),isTimeSet:Math.pow(2,6),isTimeCorrected:Math.pow(2,7),isMeterFailure:Math.pow(2,8),isMeterTerminalBoxOpen:Math.pow(2,9),isModuleCompartmentOpen:Math.pow(2,10),isTariffPlanChanged:Math.pow(2,11),isNewTariffPlanReceived:Math.pow(2,12)},W={128:1,129:5,130:10,131:100,132:1e3,133:1e4,134:1e5},k=(t=>{const e={};for(const n in t){e[t[n]]=n}return e})(W);function N(t,e=!0){d.call(this,t,e)}N.prototype=Object.create(d.prototype),N.prototype.constructor=N,N.prototype.getExtendedValue=function(){let t=0,e=!0,n=0;for(;e&&this.offset<=this.data.length;){const s=this.getUint8();e=!!(128&s),t+=(127&s)<<7*n,++n}return t<0&&(t=0),t},N.prototype.setExtendedValue=function(t){if(0===t)return void this.setUint8(0);const e=[];let n=t;for(;n;)e.push(128|127&n),n>>=7;const s=e.pop();s&&e.push(127&s),e.forEach((t=>this.setUint8(t)))},N.prototype.getExtendedValueSize=function(t){const e=t+Math.ceil(t/7);return Math.ceil(e/8)},N.prototype.getTime=function(){return this.getUint32(!1)},N.prototype.setTime=function(t){this.setUint32(t,!1)},N.prototype.getBatteryVoltage=function(){const t=this.getUint8(),e=this.getUint8();let n=t<<4;n|=(240&e)>>4;let s=(15&e)<<8|this.getUint8();return s===v&&(s=void 0),n===v&&(n=void 0),{underLowLoad:n,underHighLoad:s}},N.prototype.setBatteryVoltage=function(t){let{underLowLoad:e,underHighLoad:n}=t;void 0===e&&(e=v),void 0===n&&(n=v);[e>>4&255,(15&e)<<4|n>>8&15,255&n].forEach((t=>this.setUint8(t)))},N.prototype.getChannels=function(){const t=[];let e=!0,n=1;for(;e;){this.getUint8().toString(2).padStart(8,"0").split("").reverse().forEach(((s,r)=>{const i=Number(s);7===r?e=!!i:(i&&t.push(n),++n)}))}return t},N.prototype.setChannels=function(t){if(0===t.length)return void this.setUint8(0);t.sort(((t,e)=>t.index-e.index));const e=Math.max(...t.map((({index:t})=>t))),n=new Array((e-e%8)/8+1).fill(0);let s=0;n.forEach(((e,r)=>{let i=7*r+1;const o=i+7;for(;i<o;){const e=t.find((t=>t.index===i));void 0!==e&&(s|=1<<(e.index-1)%7),++i}void 0!==n[r+1]&&(s|=128),n[r]=s,s=0})),n.forEach((t=>this.setUint8(t)))},N.prototype.getChannelsValuesWithHourDiff=function(){const t=this.getDate(),{hour:e,hours:n}=this.getHours(),s=this.getChannels(),r=[];return t.setUTCHours(e),s.forEach((t=>{const e=[],s=this.getExtendedValue();for(let t=1;t<n;++t)e.push(this.getExtendedValue());r.push({value:s,diff:e,index:t})})),{startTime2000:E(t),hours:n,channelList:r}},N.prototype.setChannelsValuesWithHourDiff=function(t,e,n){const s=U(e),r=s.getUTCHours();this.setDate(s),this.setHours(r,t),this.setChannels(n),n.forEach((({value:t,diff:e})=>{this.setExtendedValue(t),e.forEach((t=>this.setExtendedValue(t)))}))},N.prototype.getHours=function(t=this.getUint8()){if(0===t)return{hours:0,hour:0};return{hours:1+((224&t)>>5),hour:31&t}},N.prototype.setHours=function(t,e){0!==t||0!==e?this.setUint8((e-1&7)<<5|31&t):this.setUint8(0)},N.prototype.getDate=function(){const t=this.getUint8(),e=this.getUint8(),n=t>>1,s=(1&t)<<3|e>>5,r=31&e;return new Date(Date.UTC(n+2e3,s-1,r,0,0,0,0))},N.prototype.setDate=function(t){let e;e=t instanceof Date?t:U(t);const n=e.getUTCFullYear()-2e3,s=e.getUTCMonth()+1;[n<<1|s>>3,(7&s)<<5|e.getUTCDate()].forEach((t=>this.setUint8(t)))},N.prototype.getPulseCoefficient=function(){const t=this.getUint8();if(128&t){const e=W[t];if(e)return e;throw new Error("pulseCoefficient MSB is set, but value unknown")}return t},N.prototype.setPulseCoefficient=function(t){if(t in k){const e=k[t];if(!e)throw new Error("pulseCoefficient MSB is set, but value unknown");this.setUint8(e)}else this.setUint8(t)},N.prototype.getChannelsWithAbsoluteValues=function(){const t=this.getChannels(),e=[];return t.forEach((t=>{e.push({pulseCoefficient:this.getPulseCoefficient(),value:this.getExtendedValue(),index:t})})),e},N.prototype.setChannelsWithAbsoluteValues=function(t){this.setChannels(t),t.forEach((({value:t,pulseCoefficient:e})=>{this.setPulseCoefficient(e),this.setExtendedValue(t)}))},N.prototype.getChannelsAbsoluteValuesWithHourDiff=function(t){const e=this.getChannels(),n=[];return e.forEach((e=>{const s=this.getPulseCoefficient(),r=this.getExtendedValue(),i=[];for(let e=1;e<t;++e)i.push(this.getExtendedValue());n.push({diff:i,value:r,pulseCoefficient:s,index:e})})),n},N.prototype.setChannelsAbsoluteValuesWithHourDiff=function(t){this.setChannels(t),t.forEach((({value:t,diff:e,pulseCoefficient:n})=>{this.setPulseCoefficient(n),this.setExtendedValue(t),e.forEach((t=>this.setExtendedValue(t)))}))},N.prototype.getEventStatus=function(t){let e;if(-1!==T.indexOf(t))e=C(V,this.getUint8());else if(-1!==L.indexOf(t))e=C(D,this.getUint8());else if(-1!==x.indexOf(t))e=C(S,this.getUint8());else if(-1!==M.indexOf(t))e=C(z,this.getExtendedValue());else{if(-1===B.indexOf(t))throw new Error("wrong hardwareType");e=C(I,this.getUint16())}return e},N.prototype.setEventStatus=function(t,e){if(-1!==T.indexOf(t))this.setUint8(b(V,e));else if(-1!==L.indexOf(t))this.setUint8(b(D,e));else if(-1!==x.indexOf(t))this.setUint8(b(S,e));else if(-1!==M.indexOf(t))this.setExtendedValue(b(z,e));else{if(-1===B.indexOf(t))throw new Error("wrong hardwareType");this.setUint16(b(I,e))}};const H=()=>m(7),O=()=>m(24),$=543;var A=(t,e=85)=>{let n=e;return t.forEach((t=>{n^=t})),n};const F={},R={},q={};F[12]=t=>{const{sequenceNumber:e,seconds:n}=t,s=new d(2,!1);return s.setUint8(e),s.setInt8(n),m(12,s.data)},F[27]=t=>{const e=new N(4),{startTime2000:n,days:s,channelList:r}=t,i=U(n);return e.setDate(i),e.setChannels(r.map((t=>({index:t})))),e.setUint8(s),m(27,e.data)},F[11]=t=>{const{startTime2000:e,events:n}=t,s=new N(5);return s.setTime(e),s.setUint8(n),m(11,s.data)},F[26]=t=>{const e=new N(4),{hours:n,startTime2000:s,channelList:r}=t,i=U(s),o=i.getUTCHours();return e.setDate(i),e.setHours(o,n),e.setChannels(r.map((t=>({index:t})))),m(26,e.data)},F[7]=H,F[24]=O,F[543]=()=>m($),F[20]=()=>m(20),F[9]=()=>m(9,[]),F[2]=t=>{const{sequenceNumber:e,seconds:n}=t,s=new d(5,!1);return s.setUint8(e),s.setInt32(n),m(2,s.data)},R[12]=t=>{if(2!==t.length)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new d(t,!1),n={sequenceNumber:e.getUint8(),seconds:e.getInt8()};if(!e.isEmpty)throw new Error("BinaryBuffer is not empty.");return n},R[27]=t=>{if(4!==t.length)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new N(t),n=e.getDate(),s=e.getChannels(),r=e.getUint8();if(!e.isEmpty)throw new Error("BinaryBuffer is not empty.");return{startTime2000:E(n),days:r,channelList:s}},R[11]=t=>{if(5!==t.length)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new N(t),n=e.getTime(),s=e.getUint8();if(!e.isEmpty)throw new Error("BinaryBuffer is not empty.");return{startTime2000:n,events:s}},R[26]=t=>{if(4!==t.length)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new N(t),n=e.getDate(),{hour:s,hours:r}=e.getHours(),i=e.getChannels();if(n.setUTCHours(s),!e.isEmpty)throw new Error("BinaryBuffer is not empty.");return{startTime2000:E(n),hours:r,channelList:i}},R[7]=H,R[24]=O,R[543]=t=>{if(0!==t.length)throw new Error(`Wrong buffer size: ${t.length}.`);return{}},R[20]=t=>{if(0!==t.length)throw new Error(`Wrong buffer size: ${t.length}.`);return{}},R[9]=t=>{if(0!==t.length)throw new Error(`Wrong buffer size: ${t.length}.`);return{}},R[2]=t=>{if(5!==t.length)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new d(t,!1),n={sequenceNumber:e.getUint8(),seconds:e.getInt32()};if(!e.isEmpty)throw new Error("BinaryBuffer is not empty.");return n},q[12]="correctTime2000",q[27]="getArchiveDaysMc",q[11]="getArchiveEvents",q[26]="getArchiveHoursMc",q[7]="getCurrent",q[24]="getCurrentMc",q[543]="getLmicInfo",q[20]="getStatus",q[9]="getTime2000",q[2]="setTime2000";const P=(t=>e=>{const n=e.map((e=>{if("parameters"in e)return t[e.id](e.parameters,e.config);if("command"in e)return e.command.bytes;throw new Error("wrong command format")})),s=[].concat(...n);return[...s,A(s)]})(F),G=2847,j=2591,Y=t=>({time2000:t.getTime(),id:t.getUint8(),sequenceNumber:t.getUint8()});const J=543,K={isMulticastSupported:1,isFragmentedDataSupported:2};const Q=21,X=t=>t.getUint16(!1),Z=e=>((e,n={})=>{const{separator:s,prefix:r}=Object.assign({},t,n);return e.map((t=>`${r}${t.toString(16).padStart(2,"0")}`)).join(s)})(e.getBytes(8)),_=(t,e)=>{(t=>{let e=t.replace(/\s+|0x/g,"");e.length%2!=0&&(e=`0${e}`);const n=e.length/2,s=new Array(n);for(let t=0;t<n;t++)s[t]=parseInt(e.substring(2*t,2*t+2),16);return s})(e).forEach((e=>t.setUint8(e)))};const tt=20,et=255;const nt={},st={},rt={},it=((t,e)=>(n=[],s)=>{const r=[],i={commands:r,bytes:n,lrc:{expected:void 0,actual:0}};let o,a,h=0;do{const i=p(n.slice(h,h+3)),o=n.slice(h,h+i.headerSize),a=n.slice(h+i.headerSize,h+i.headerSize+i.commandSize),f={id:i.commandId,name:e[i.commandId],headerSize:i.headerSize,bytes:[...o,...a]};h=h+i.headerSize+i.commandSize,s&&(f.config=s);try{f.parameters=t[i.commandId](a,s),r.push(f)}catch(t){r.push({command:f,error:t.message})}}while(h<n.length-1);return n.length-h==1?(o=n[n.length-1],a=A(n.slice(0,-1))):a=A(n),i.lrc.actual=a,i.lrc.expected=o,o===a?i:{message:i,error:"mismatch LRC"}})(st,rt);nt[12]=t=>{const{status:e}=t,n=new d(1,!1);return n.setUint8(e),m(12,n.data)},nt[24]=t=>{const e=new N(37),{channelList:n}=t;return e.setChannels(n),n.forEach((({value:t})=>{e.setExtendedValue(t)})),m(24,e.getBytesToOffset())},nt[22]=t=>{const e=new N(32),{channelList:n,startTime2000:s}=t;return e.setDate(s),e.setChannels(n),n.forEach((({value:t})=>{e.setExtendedValue(t)})),m(22,e.getBytesToOffset())},nt[G]=t=>{const e=new N(89),{startTime2000:n,channelList:s}=t;return e.setDate(n),e.setChannelsWithAbsoluteValues(s),m(G,e.getBytesToOffset())},nt[j]=t=>{const e=new N(168),{startTime2000:n,hours:s,channelList:r}=t,i=U(n).getUTCHours();return e.setDate(n),e.setHours(i,s),e.setChannelsAbsoluteValuesWithHourDiff(r),m(j,e.getBytesToOffset())},nt[27]=t=>{const e=new N(5104),{startTime2000:n,days:s,channelList:r}=t;return e.setDate(n),e.setChannels(r),e.setUint8(s),r.forEach((({dayList:t})=>{t.forEach((t=>{e.setExtendedValue(t)}))})),m(27,e.getBytesToOffset())},nt[11]=function(t){const{eventList:e}=t,n=new N(6*e.length,!1);return e.forEach((t=>((t,e)=>{t.setTime(e.time2000),t.setUint8(e.id),t.setUint8(e.sequenceNumber)})(n,t))),m(11,n.data)},nt[26]=t=>{const e=new N(164),{hours:n,startTime2000:s,channelList:r}=t;return e.setChannelsValuesWithHourDiff(n,s,r),m(26,e.getBytesToOffset())},nt[543]=t=>{const{capabilities:e,version:n}=t,s=new d(2);return s.setUint8(b(K,e)),s.setUint8(n),m(J,s.data)},nt[23]=t=>{const e=new N(164),{startTime2000:n,hours:s,channelList:r}=t;return e.setChannelsValuesWithHourDiff(s,n,r),m(23,e.getBytesToOffset())},nt[21]=t=>{const e=new N(14),{id:n,sequenceNumber:s,data:r}=t;switch(e.setUint8(n),e.setUint8(s),n){case 1:case 2:case 3:case 4:case 6:case 7:case 8:case 9:case 15:case 16:case 18:e.setTime(r.time2000);break;case 5:((t,e)=>{t.setUint16(e,!1)})(e,r.voltage);break;case 11:e.setTime(r.time2000),_(e,r.deviceId);break;case 12:case 13:e.setUint8(r.channel-1),e.setExtendedValue(r.value);break;case 17:e.setEventStatus(7,r.status);break;default:throw new Error("Event 21 is not supported")}return m(Q,e.getBytesToOffset())},nt[2]=t=>{const{status:e}=t,n=new d(1,!1);return n.setUint8(e),m(2,n.data)},nt[20]=t=>{const{software:e,hardware:n,data:s}=t,r=new N(20);switch(r.setUint8(e.type),r.setUint8(e.version),r.setUint8(n.type),r.setUint8(n.version),n.type){case 1:case 2:case 3:case 4:case 5:case 6:case 8:case 9:case 10:case 12:{const t=s;r.setBatteryVoltage(t.batteryVoltage),void 0===t.batteryInternalResistance?r.setUint16(65535,!1):r.setUint16(t.batteryInternalResistance,!1),r.setUint8(t.temperature),void 0===t.remainingBatteryCapacity?r.setUint8(et):r.setUint8(t.remainingBatteryCapacity/100*254),r.setUint8(t.lastEventSequenceNumber)}break;case 7:{const t=s;r.setUint32(t.time2000),r.setUint8(t.resetReason),r.setUint8(t.rssiLastDownlinkFrame),r.setUint8(t.snrLastDownlinkFrame),r.setUint8(t.downlinkRequestsNumber),r.setUint8(t.downlinkFragmentsNumber),r.setUint8(t.uplinkResponsesNumber),r.setUint8(t.uplinkFragmentsNumber),r.setUint8(t.signalMarginToGateway),r.setUint8(t.signalMarginFromGateway),r.setUint8(t.detectedGatewaysNumber),r.setUint8(t.gatewayDownlinkErrorRate),r.setUint8(t.lastEventSequenceNumber)}break;default:throw new Error(`20: hardware type ${n.type} is not supported`)}return m(tt,r.getBytesToOffset())},nt[9]=function(t){const{sequenceNumber:e,time2000:n}=t,s=new N(5);return s.setUint8(e),s.setTime(n),m(9,s.data)},st[12]=t=>{if(1!==t.length)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new d(t,!1),n={status:e.getUint8()};if(!e.isEmpty)throw new Error("BinaryBuffer is not empty.");return n},st[24]=t=>{if(t.length>37)throw new Error(`Wrong buffer size: ${t.length}.`);const e={channelList:[]},n=new N(t),s=n.getChannels();return e.channelList=s.map((t=>({value:n.getExtendedValue(),index:t}))),e},st[22]=t=>{if(t.length>32)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new N(t),n=e.getDate(),s=e.getChannels().map((t=>({value:e.getExtendedValue(),index:t})));return{startTime2000:E(n),channelList:s}},st[G]=t=>{if(t.length>89)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new N(t),n=e.getDate(),s=e.getChannelsWithAbsoluteValues();return{startTime2000:E(n),channelList:s}},st[j]=t=>{if(t.length>168)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new N(t),n=e.getDate(),{hour:s,hours:r}=e.getHours(),i=e.getChannelsAbsoluteValuesWithHourDiff(r);return n.setUTCHours(s),{startTime2000:E(n),hours:r,channelList:i}},st[27]=t=>{const e=new N(t),n=e.getDate(),s=e.getChannels(),r=e.getUint8(),i=[];return s.forEach((t=>{const n=[];i.push({dayList:n,index:t});for(let t=0;t<r;++t)n.push(e.getExtendedValue())})),{startTime2000:E(n),days:r,channelList:i}},st[11]=t=>{const e=new N(t,!1),n=[];for(;e.bytesLeft>0;)n.push(Y(e));return{eventList:n}},st[26]=t=>{if(t.length>164)throw new Error(`Wrong buffer size: ${t.length}.`);return new N(t).getChannelsValuesWithHourDiff()},st[543]=t=>{if(2!==t.length)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new d(t),n=C(K,e.getUint8()),s=e.getUint8();if(!e.isEmpty)throw new Error("BinaryBuffer is not empty.");return{capabilities:n,version:s}},st[23]=t=>{if(t.length>164)throw new Error(`Wrong buffer size: ${t.length}.`);return new N(t).getChannelsValuesWithHourDiff()},st[21]=t=>{if(t.length>14)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new N(t),n=e.getUint8(),s=e.getUint8();let r;switch(n){case 1:case 2:case 3:case 4:case 6:case 7:case 8:case 9:case 15:case 16:case 18:r={time2000:e.getTime()};break;case 5:r={voltage:X(e)};break;case 11:r={time2000:e.getTime(),deviceId:Z(e)};break;case 12:case 13:r={channel:e.getUint8()+1,value:e.getExtendedValue()};break;case 17:r={status:e.getEventStatus(7)};break;default:throw new Error("Event 21 is not supported")}return{id:n,sequenceNumber:s,data:r}},st[2]=t=>{if(1!==t.length)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new d(t,!1),n={status:e.getUint8()};if(!e.isEmpty)throw new Error("BinaryBuffer is not empty.");return n},st[20]=t=>{const e=new N(t),n={type:e.getUint8(),version:e.getUint8()},s={type:e.getUint8(),version:e.getUint8()};let r;switch(s.type){case 1:case 2:case 3:case 4:case 5:case 6:case 8:case 9:case 10:case 12:{const t={batteryVoltage:e.getBatteryVoltage(),batteryInternalResistance:e.getUint16(!1),temperature:e.getUint8(),remainingBatteryCapacity:e.getUint8(),lastEventSequenceNumber:e.getUint8()};65535===t.batteryInternalResistance&&(t.batteryInternalResistance=void 0),t.remainingBatteryCapacity===et?t.remainingBatteryCapacity=void 0:void 0!==t.remainingBatteryCapacity&&(t.remainingBatteryCapacity=((t,e=4)=>{const n=Math.pow(10,e);return Math.round(t*n*(1+Number.EPSILON))/n})(100*t.remainingBatteryCapacity/254,0)),r=t}break;case 7:r={time2000:e.getUint32(),resetReason:e.getUint8(),rssiLastDownlinkFrame:e.getUint8(),snrLastDownlinkFrame:e.getUint8(),downlinkRequestsNumber:e.getUint8(),downlinkFragmentsNumber:e.getUint8(),uplinkResponsesNumber:e.getUint8(),uplinkFragmentsNumber:e.getUint8(),signalMarginToGateway:e.getUint8(),signalMarginFromGateway:e.getUint8(),detectedGatewaysNumber:e.getUint8(),gatewayDownlinkErrorRate:e.getUint8(),lastEventSequenceNumber:e.getUint8()};break;default:throw new Error(`20: hardware type ${s.type} is not supported`)}return{software:n,hardware:s,data:r}},st[9]=t=>{if(5!==t.length)throw new Error(`Wrong buffer size: ${t.length}.`);const e=new N(t),n={sequenceNumber:e.getUint8(),time2000:e.getTime()};if(!e.isEmpty)throw new Error("BinaryBuffer is not empty.");return n},rt[12]="correctTime2000",rt[24]="currentMc",rt[22]="dayMc",rt[G]="exAbsDayMc",rt[j]="exAbsHourMc",rt[27]="getArchiveDaysMc",rt[11]="getArchiveEvents",rt[26]="getArchiveHoursMc",rt[543]="getLmicInfo",rt[23]="hourMc",rt[21]="newEvent",rt[2]="setTime2000",rt[20]="status",rt[9]="time2000",fromBytes=it,toBytes=P}();
//#endregion
